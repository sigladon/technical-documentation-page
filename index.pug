

// ------------------------------------------------------------------------------
doctype html
html
    head
        title Technical Documentation Page
        link(rel="icon" href="" type="image/icon type")
        meta(charset="UTF-8")
        meta(name="viewport",content="width=device-width, initial-scale=1.0")
        link(rel="stylesheet" href="./css/mobile.css")
        link(rel="stylesheet" href="./css/desktop.css" media="screen and (min-width:800px)")

body
    nav#navbar
        header Arch Linux Installation Guide
        ul.table-contents
            li.sections: a.nav-link(href="#Introduction") Introduction
            li.sections: a.nav-link(href="#Pre-installation") Pre-installation
            ul
                li.subsections: a(href="#Acquire_an_installation_image") Acquire an installation image
                li.subsections: a(href="#Verify_signature") Verify signature
                li.subsections: a(href="#Prepare_an_installation_medium") Prepare an installation medium
                li.subsections: a(href="#Boot_the_live_environment") Boot the live environment
                li.subsections: a(href="#Set_the_console_keyboard_layout") Set the console keyboard layout
                li.subsections: a(href="#Verify_the_boot_mode") Verify the boot mode
                li.subsections: a(href="#Connect_to_the_internet") Connect to the internet
                li.subsections: a(href="#Update_the_system_clock") Update the system clock
                li.subsections: a(href="#Partition_the_disks") Partition the disks
                ul: li.subsubsections: a(href="#Example_layouts") Example layouts

                li.subsections: a(href="#Format_the_partitions") Format the partitions
                li.subsections: a(href="#Mount_the_file_systems") Mount the file systems
                li.sections: a.nav-link(href="#Installation") Installation
            ul
                li.subsections: a(href="#Select_the_mirrors") Select the mirrors
                li.subsections: a(href="#Install_essential_packages") Install essential packages
            li.sections: a.nav-link(href="#Configure_the_system") Configure the system
            ul
                li.subsections: a(href="#Fstab") Fstab
                li.subsections: a(href="#Chroot") Chroot
                li.subsections: a(href="#Time_zone") Time zone
                li.subsections: a(href="#Localization") Localization
                li.subsections: a(href="#Network_configuration") Network configuration
                li.subsections: a(href="#Initramfs") Initramfs
                li.subsections: a(href="#Root_password") Root password
                li.subsections: a(href="#Boot_loader") Boot loader
            li.sections: a.nav-link(href="#Reboot") Reboot
            li.sections: a.nav-link(href="#Post-installation") Post-installation
    main#main-doc
        section.main-section#Introduction
            header: h1 Introduction
            p This document is a guide for installing Arch Linux using the live system booted from an installation medium made from an official installation image. The installation medium provides accessibility features which are described on the page #[span.pseudolink Install Arch Linux with accessibility options]. For alternative means of installation, see #[span.pseudolink Category:Installation process].
            p Before installing, it would be advised to view the #[span.pseudolink FAQ]. For conventions used in this document, see #[span.pseudolink Help:Reading]. In particular, code examples may contain placeholders (formatted in #[span.pseudocode italics]) that must be replaced manually
            p For more detailed instructions, see the respective #[span.pseudolink ArchWiki] articles or the various programs' #[span.pseudolink man pages], both linked from this guide. For interactive help, the #[span.pseudolink IRC channel] and the #[span.pseudolink forums] are also available.
            p Arch Linux should run on any #[span.pseudolink x86_64]-compatible machine with a minimum of 512 MiB RAM, though more memory is needed to boot the live system for installation. A basic installation should take less than 2 GiB of disk space. As the installation process needs to retrieve packages from a remote repository, this guide assumes a working internet connection is available.
        section.main-section#Pre-installation
            header: h1 Pre-installation
            h2#Acquire_an_installation_image Acquire an installation image
            p Visit the #[span.pseudolink Download] page and, depending on how you want to boot, acquire the ISO file or a netboot image, and the respective #[span.pseudolink GnuPG] signature.
            h2#Verify_signature Verify signature
            p It is recommended to verify the image signature before use, especially when downloading from an HTTP mirror, where downloads are generally prone to be intercepted to #[span.pseudolink serve malicious images].
            p On a system with #[span.pseudolink GnuPG] installed, do this by downloading the PGP signature (under Checksums in the #[span.pseudolink Download] page) to the ISO directory, and #[span.pseudolink verifying] it with:
            code $ gpg --keyserver-options auto-key-retrieve --verify archlinux-version-x86_64.iso.sig
            p Alternatively, from an existing Arch Linux installation run:
            code $ pacman-key -v archlinux-version-x86_64.iso.sig
            div.note(class="complement-div")
                h2 Note:
                ul
                    li The signature itself could be manipulated if it is downloaded from a mirror site, instead of from #[span.pseudolink archlinux.org] as above. In this case, ensure that the public key, which is used to decode the signature, is signed by another, trustworthy key. The #[span.pseudocode gpg] command will output the fingerprint of the public key.
                    li Another method to verify the authenticity of the signature is to ensure that the public key's fingerprint is identical to the key fingerprint of the #[span.pseudolink Arch Linux developer] who signed the ISO-file. See #[span.pseudolink Wikipedia:Public-key cryptography] for more information on the public-key process to authenticate keys.
            h2#Prepare_an_installation_medium Prepare an installation medium
            p The installation image can be supplied to the target machine via a #[span.pseudolink USB flash drive], an #[span.pseudolink optical disc] or a network with #[span.pseudolink PXE]: follow the appropriate article to prepare yourself an installation medium from the chosen image.
            h2#Boot_the_live_environment Boot the live environment
            div.note(class="complement-div")
                p #[b Note]: Arch Linux installation images do not support Secure Boot. You will need to #[span.pseudolink disable Secure Boot] to boot the installation medium. If desired, #[span.pseudolink Secure Boot] can be set up after completing the installation.
            ol
                li Point the current boot device to the one which has the Arch Linux installation medium. Typically it is achieved by pressing a key during the #[span.pseudolink POST] phase, as indicated on the splash screen. Refer to your motherboard's manual for details.
                li When the installation medium's boot loader menu appears, select Arch Linux install medium and press #[span.pseudocode Enter] to enter the installation environment.
                div.tip(class="complement-div")
                    p #[b Tip]: The installation image uses #[span.pseudolink systemd-boot] for booting in UEFI mode and #[span.pseudolink syslinux] for booting in BIOS mode. See #[span.pseudolink README.bootparams] for a list of #[span.pseudolink boot parameters].
                li You will be logged in on the first #[span.pseudolink virtual console] as the root user, and presented with a #[span.pseudolink Zsh] shell prompt.
            p To switch to a different console—for example, to view this guide with #[span.pseudolink Lynx] alongside the installation—use the #[span.pseudocode Alt+arrow] #[span.pseudolink shortcut]. To edit configuration files, #[span.pseudolink mcedit(1)], #[span.pseudolink nano] and #[span.pseudolink vim] are available. See #[span.pseudolink packages.x86_64] for a list of the packages included in the installation medium.
            h2#Set_the_console_keyboard_layout Set the console keyboard layout
            p The default #[span.pseudolink console keymap] is #[span.pseudolink US]. Available layouts can be listed with:
            code # ls /usr/share/kbd/keymaps/**/*.map.gz
            p To set the keyboard layout, pass a corresponding file name to #[span.pseudolink loadkeys(1)], omitting path and file extension. For example, to set a #[span.pseudolink German] keyboard layout:
            code # loadkeys de-latin1
            p Console fonts are located in #[span.pseudocode /usr/share/kbd/consolefonts/] and can likewise be set with #[span.pseudolink setfont(8)].
            h2#Verify_the_boot_mode Verify the boot mode
            p To verify the boot mode, list the #[span.pseudolink efivars] directory:
            code # ls /sys/firmware/efi/efivars
            p If the command shows the directory without error, then the system is booted in UEFI mode. If the directory does not exist, the system may be booted in #[span.pseudolink BIOS] (or #[span.pseudolink CSM]) mode. If the system did not boot in the mode you desired, refer to your motherboard's manual.
            h2#Connect_to_the_internet Connect to the internet
            p To set up a network connection in the live environment, go through the following steps:
            ul
                li Ensure your #[span.pseudolink network interface] is listed and enabled, for example with #[span.pseudolink ip-link(8)]:
                code # ip link
                li For wireless and WWAN, make sure the card is not blocked with #[span.pseudolink rfkill].
                li Connect to the network:
                    ul
                        li Ethernet—plug in the cable.
                        li Wi-Fi—authenticate to the wireless network using #[span.pseudolink iwctl].
                        li Mobile broadband modem—connect to the mobile network with the #[span.pseudolink mmcli] utility.
                li Configure your network connection:
                    ul
                        li #[span.pseudolink DHCP]: dynamic IP address and DNS server assignment (provided by #[span.pseudolink systemd-networkd] and #[span.pseudolink systemd-resolved]) should work out of the box for Ethernet, WLAN, and WWAN network interfaces.
                        li Static IP address: follow #[span.pseudolink Network configuration#Static IP address].
                li The connection may be verified with #[span.pseudolink ping]:
                code # ping archlinux.org
            div.note(class="complement-div")
                p #[b Note]: In the installation image, #[span.pseudolink systemd-networkd], #[span.pseudolink systemd-resolved], #[span.pseudolink iwd] and #[span.pseudolink ModemManager] are preconfigured and enabled by default. That will not be the case for the installed system.
            h2#Update_the_system_clock Update the system clock
            p Use #[span.pseudolink timedatectl(1)] to ensure the system clock is accurate:
            code # timedatectl set-ntp true
            p To check the service status, use #[span.pseudocode timedatectl status].
            h2#Partition_the_disks Partition the disks
            p When recognized by the live system, disks are assigned to a #[span.pseudolink block device] such as #[span.pseudocode /dev/sda], #[span.pseudocode /dev/nvme0n1] or #[span.pseudocode /dev/mmcblk0]. To identify these devices, use #[span.pseudolink lsblk] or #[span.pseudolink fdisk].
            code # fdisk -l
            p Results ending in #[span.pseudocode rom], #[span.pseudocode loop] or #[span.pseudocode airoot] may be ignored.
            p The following #[span.pseudolink partitions] are required for a chosen device:
            ul
                li One partition for the #[span.pseudolink root directory] #[span.pseudocode /].
                li For booting in #[span.pseudolink UEFI] mode: an #[span.pseudolink EFI system partition].
            p If you want to create any stacked block devices for #[span.pseudolink LVM, system encryption] or #[span.pseudolink RAID], do it now.
            p Use #[span.pseudolink fdisk] or #[span.pseudolink parted] to modify partition tables. For example:
            code # fdisk /dev/the_disk_to_be_partitioned
            div.note(class="complement-div")
                h2 Note:
                ul
                    li If the disk does not show up, #[span.pseudolink make sure the disk controller is not in RAID mode].
                    li If the disk from which you want to boot #[span.pseudolink already has an EFI system partition], do not create another one, but use the existing partition instead.
                    li #[span.pseudolink Swap] space can be set on a #[span.pseudolink swap file] for file systems supporting it.
            h3#Example_layouts Example layouts
            div.table-container
                table
                    caption UEFI with #[span.pseudolink GPT]
                    tr
                        th Mount point
                        th Partition
                        th #[span.pseudolink Partition type]
                        th Suggested size
                    tr
                        td: span.pseudocode /mnt/boot
                        td: span.pseudocode /dev/efi_system_partition
                        td #[span.pseudolink EFI system partition]
                        td At least 300 MiB
                    tr
                        td: span.pseudocode [SWAP]
                        td: span.pseudocode /dev/swap_partition
                        td Linux swap
                        td More than 512 MiB
                    tr
                        td: span.pseudocode /mnt
                        td: span.pseudocode /dev/root_partition
                        td Linux x86-64 root (/)
                        td Remainder of the device
            ol
                li #[span.pseudolink Other mount points], such as #[span.pseudocode /mnt/efi], are possible, provided that the used boot loader is capable of loading the kernel and initramfs images from the root volume. See the warning in #[span.pseudolink Arch boot process#Boot loader].
            div.table-container
                table
                    caption BIOS with #[span.pseudolink MBR]
                    tr
                        th Mount point
                        th Partition
                        th #[span.pseudolink Partition type]
                        th Suggested size
                    tr
                        td: span.pseudocode [SWAP]
                        td: span.pseudocode /dev/swap_partition
                        td Linux swap
                        td More than 512 MiB
                    tr
                        td: span.pseudocode /mnt
                        td: span.pseudocode /dev/root_partition
                        td Linux
                        td Remainder of the device
            p See also #[span.pseudolink Partitioning#Example layouts].
            h2#Format_the_partitions Format the partitions
            p Once the partitions have been created, each newly created partition must be formatted with an appropriate #[span.pseudolink file system]. See #[span.pseudolink File systems#Create a file system] for details.
            p For example, to create an Ext4 file system on #[span.pseudocode /dev/root_partition], run:
            code # mkfs.ext4 /dev/root_partition
            p If you created a partition for #[span.pseudolink swap], initialize it with #[span.pseudolink mkswap(8)]:
            code # mkswap /dev/swap_partition
            div.note(class="complement-div")
                p Note: For stacked block devices replace #[span.pseudocode /dev/*_partition] with the appropriate block device path.
            p If you created an EFI system partition, #[span.pseudolink format it] to FAT32 using #[span.pseudolink mkfs.fat(8)].
            div.warning(class="complement-div")
                p Warning: Only format the EFI system partition if you created it during the partitioning step. If there already was an EFI system partition on disk beforehand, reformatting it can destroy the boot loaders of other installed operating systems.
            code # mkfs.fat -F 32 /dev/efi_system_partition
            h2#Mount_the_file_systems Mount the file systems
            p #[span.pseudolink Mount] the root volume to #[span.pseudocode /mnt]. For example, if the root volume is #[span.pseudocode /dev/root_partition]:
            code # mount /dev/root_partition /mnt
            p Create any remaining mount points (such as #[span.pseudocode /mnt/efi]) using #[span.pseudolink mkdir(1)] and mount their corresponding volumes.
            p For UEFI systems, mount the EFI system partition:
            code # mount /dev/efi_system_partition /mnt/boot
            p If you created a #[span.pseudolink swap] volume, enable it with #[span.pseudolink swapon(8)]:
            code # swapon /dev/swap_partition
            p #[span.pseudolink genfstab(8)] will later detect mounted file systems and swap space.
        section.main-section#Installation
            header: h1 Installation
            h2#Select_the_mirrors Select the mirrors
            p Packages to be installed must be downloaded from #[span.pseudolink mirror servers], which are defined in #[span.pseudocode /etc/pacman.d/mirrorlist]. On the live system, after connecting to the internet, #[span.pseudolink reflector] updates the mirror list by choosing 20 most recently synchronized HTTPS mirrors and sorting them by download rate.
            p The higher a mirror is placed in the list, the more priority it is given when downloading a package. You may want to inspect the file to see if it is satisfactory. If it is not, edit the file accordingly, and move the geographically closest mirrors to the top of the list, although other criteria should be taken into account.
            p This file will later be copied to the new system by pacstrap, so it is worth getting right.
            h2#Install_essential_packages Install essential packages
            p Use the #[span.pseudolink pacstrap(8)] script to install the #[span.pseudolink base] package, Linux #[span.pseudolink kernel] and firmware for common hardware:
            code # pacstrap /mnt base linux linux-firmware
            div.tip(class="complement-div")
                h2 Tip:
                ul
                    li You can substitute #[span.pseudolink linux] for a #[span.pseudolink kernel] package of your choice, or you could omit it entirely when installing in a #[span.pseudolink container].
                    li You could omit the installation of the firmware package when installing in a virtual machine or container.
            p The #[span.pseudolink base] package does not include all tools from the live installation, so installing other packages may be necessary for a fully functional base system. In particular, consider installing:
            ul
                li userspace utilities for the management of #[span.pseudolink file systems] that will be used on the system,
                li utilities for accessing #[span.pseudolink RAID] or #[span.pseudolink LVM] partitions,
                li specific firmware for other devices not included in #[span.pseudolink linux-firmware] (e.g. #[span.pseudolink sof-firmware] for #[span.pseudolink sound cards]),
                li software necessary for #[span.pseudolink networking] (e.g. a network manager or DHCP client),
                li a #[span.pseudolink text editor],
                li packages for accessing documentation in #[span.pseudolink man] and #[span.pseudolink info] pages: #[span.pseudolink man-db], #[span.pseudolink man-pages] and #[span.pseudolink texinfo].
            p To #[span.pseudolink install] other packages or package groups, append the names to the pacstrap command above (space separated) or use #[span.pseudolink pacman] while #[span.pseudolink chrooted into the new system]. For comparison, packages available in the live system can be found in #[span.pseudolink packages.x86_64].
        section.main-section#Configure_the_system
            header: h1 Configure the system
            h2#Fstab Fstab
            p Generate an #[span.pseudolink fstab] file (use #[span.pseudocode -U] or #[span.pseudocode -L] to define by #[span.pseudolink UUID] or labels, respectively):
            code # genfstab -U /mnt >> /mnt/etc/fstab
            p Check the resulting #[span.pseudocode /mnt/etc/fstab] file, and edit it in case of errors.
            h2#Chroot Chroot
            p #[span.pseudolink Change root] into the new system:
            code # arch-chroot /mnt
            h2#Time_zone Time zone
            p Set the #[span.pseudolink time zone]:
            code # ln -sf /usr/share/zoneinfo/Region/City /etc/localtime
            p Run #[span.pseudolink hwclock(8)] to generate #[span.pseudocode /etc/adjtime]:
            code # hwclock --systohc
            p This command assumes the hardware clock is set to #[span.pseudolink UTC]. See #[span.pseudolink System time#Time standard] for details.
            h2#Localization Localization
            p Edit #[span.pseudocode /etc/locale.gen] and uncomment #[span.pseudocode en_US.UTF-8 UTF-8] and other needed locales. Generate the locales by running:
            code # locale-gen
            p #[span.pseudolink Create] the #[span.pseudolink locale.conf(5)] file, and #[span.pseudolink set the LANG variable accordingly]:
            code /etc/locale.conf
            code LANG=en_US.UTF-8
            p If you #[span.pseudolink set the console keyboard layout], make the changes persistent in #[span.pseudolink vconsole.conf(5)]:
            code /etc/vconsole.conf
            code KEYMAP=de-latin1
            h2#Network_configuration Network configuration
            p #[span.pseudolink Create] the #[span.pseudolink hostname] file:
            code /etc/hostname
            code myhostname
            p Complete the #[span.pseudolink network configuration] for the newly installed environment. That may include installing suitable #[span.pseudolink network management] software.
            h2#Initramfs Initramfs
            p Creating a new initramfs is usually not required, because #[span.pseudolink mkinitcpio] was run on installation of the #[span.pseudolink kernel] package with pacstrap.
            p For #[span.pseudolink LVM], #[span.pseudolink system encryption] or #[span.pseudolink RAID], modify #[span.pseudolink mkinitcpio.conf(5)] and recreate the initramfs image:
            code # mkinitcpio -P
            h2#Root_password Root password
            p Set the root #[span.pseudolink password]:
            code # passwd
            h2#Boot_loader Boot loader
            p Choose and install a Linux-capable #[span.pseudolink boot loader]. If you have an Intel or AMD CPU, enable #[span.pseudolink microcode] updates in addition.
        section.main-section#Reboot
            header:  h1 Reboot
            p Exit the chroot environment by typing #[span.pseudocode exit] or pressing #[span.pseudocode Ctrl+d].
            p Optionally manually unmount all the partitions with #[span.pseudocode umount -R /mnt]: this allows noticing any "busy" partitions, and finding the cause with #[span.pseudolink fuser(1)].
            p Finally, restart the machine by typing #[span.pseudocode reboot]: any partitions still mounted will be automatically unmounted by systemd. Remember to remove the installation medium and then login into the new system with the root account.

            
        section.main-section#Post-installation
            header: h1 Post-installation
            p See #[span.pseudolink General recommendations] for system management directions and post-installation tutorials (like creating unprivileged user accounts, setting up a graphical user interface, sound or a touchpad).
            p For a list of applications that may be of interest, see #[span.pseudolink List of applications].
    script(src="https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js")
